'use strict';
console.log('–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞:');

const obj1 = new Object();
console.log("üöÄ ~ new Object ~ line 5 ~ obj1", obj1)

const obj2 = {};
console.log("üöÄ ~ obj2 = {} ~ line 8 ~", obj2)


// –°–æ–∑–¥–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –±–µ–∑ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
const noPrototypeObject = Object.create(null);
console.log("üöÄ ~ Object.create(null); ~ line 12 ~ noPrototypeObject", noPrototypeObject)


// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –∏ –∑–Ω–∞—á–µ–Ω–∏—è—Ö —Å–≤–æ–π—Å—Ç –æ–±—ä–µ–∫—Ç–∞
const firstName = '–§–ª–æ–∏–¥';
const lastName = '–õ–æ—É—Ç–æ–Ω';

const user = {
	login: 'Deadshot',
	firstName: firstName,
	lastName,
	'favorite weapon': 'Glock 19',
	cars: ['opel', 'mazda', 'bmw'],
	age: 48,
	status: {
		alive: true,
		wanted: true,
		free: true,
	},
	say() {
		console.log('–ú–µ–Ω—è –∑–æ–≤—É—Ç –§–ª–æ–π–¥')
	},

};


// –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ (2 —Ç–∏–ø–∞)
const str = 'firstName';

console.log('user.login', user.login);
console.log('user["favorite weapon"];', user['favorite weapon']);

console.log(`str = 'firstName';`, user[str]);

// –ú–µ—Ç–æ–¥—ã –≤ –æ–±—ä–µ–∫—Ç–µ
user.say();

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
delete user.cars;

//–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
user.login = 'Anonimus';

//–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ –≤ –æ–±—ä–µ–∫—Ç
user.smoke = true;

console.log("üöÄ line 43 ~ user", user);

const elem = {
	tagName: 'div',
	className: 'container',
};

elem.className = 'wrapper';
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 58 ~ elem", elem);

const decorObj = obj => {
	obj.prop = '–≤–æ—Ç —ç—Ç–æ –¥–∞!';
};
decorObj(elem);
console.log("üöÄ ~elem", elem);

// –ü–µ—Ä–µ–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞ —Å for in
for (const prop in user) {
	console.log(`üöÄ ~ file: Theory-practice-objects.js ~ line 68 ~ 
	user.${prop} = ${user[prop]}`);
};

// –ó–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞, –∑–∞–ø–∏—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–∫–ª—é—á–µ–π)
const keys = Object.keys(user);
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 73 ~ keys", keys)

// –ü–µ—Ä–µ–±–æ—Ä –∫–ª—é—á–µ–π
for (const key of keys) {
	console.log(`üöÄ ~ file: Theory-practice-objects.js ~ line 68 ~ 
	user.${key} = ${user[key]}`);
};

// –ó–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞, –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏–π –∫–ª—é—á–µ–π (values)
const values = Object.values(user);
console.log("üöÄ ~~ values", values)

// –ü–µ—Ä–µ–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π
for (const value of values) {
	console.log(`üöÄ ~ file: Theory-practice-objects.js ~ line 68 ~ 
	user.${value} = ${user[value]}`);
};

// –ó–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞, –∑–∞–ø–∏—Å—å –º–∞—Å—Å–∏–≤–∞ –∏–∑ –∫–ª—é—á–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏—è (entries)
const entries = Object.entries(user);
console.log("üöÄ ~~ entries", entries);

// –ü–µ—Ä–µ–±–æ—Ä entries
for (const [key, value] of entries) {
	console.log(`üöÄ ~ file: Theory-practice-objects.js ~ line 68 ~ 
	`, key, value);
};

console.log("üöÄARRAY TO OBJ");
console.log("üöÄARRAY TO OBJ");
console.log("üöÄARRAY TO OBJ");


const array = [
	[
		"login",
		"Anonimus"
	],
	[
		"firstName",
		"–§–ª–æ–∏–¥"
	],
	[
		"lastName",
		"–õ–æ—É—Ç–æ–Ω"
	],
	[
		"favorite weapon",
		"Glock 19"
	],
	[
		"age",
		48
	],
	[
		"status",
		{
			"alive": true,
			"wanted": true,
			"free": true
		}
	],
	[
		"say",
		null
	],
	[
		"smoke",
		true
	]
]

// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é Object.fromEntries()
const obj = Object.fromEntries(array);
console.log("üöÄ ~ ~ line 144 ~ obj", obj)
console.log("üöÄ line 144 ~ obj", obj.hasOwnProperty('age'));

console.log('–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: 2');

const obj3 = {
	a: 1,
	b: {
		a: 2,
	},
	c: 3,
};


const obj4 = {
	c: 5,
	b: {
		d: 4,
	},
};
console.log("üöÄ ~ file: Obj assign ~ line 155 ~ obj3", obj3);

// –°–ª–∏—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ø–∏–∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ assign Object.assign({}, obj3, obj4);
const obj5 = Object.assign({}, obj3, obj4);
console.log("üöÄ ~ file:~ line 166 ~ obj5", obj5)

const obj6 = Object.assign({}, obj3);
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 169 ~ obj6", obj6);
// Spread –æ–ø–µ—Ä–∞—Ç–æ—Ä ...
const obj7 = { ...obj3, foo: 'hi', ...obj4, };
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 173 ~ obj7", obj7);

console.log('–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 3');

const hero2 = {
	login: 'Deadpool',
	firstName: '–£—ç–π–¥',
	lastName: '–£–∏–ª—Å–æ–Ω',
	favoriteWeapon: 'katanas',
	otherWEapons: [
		'Mateba Autorevolver',
		'Ingram MAC-10',
		'Desert Eagle Mark XIX',
		'M16',
		'–†–ì–î-5',
	],
	transport: {
		cars: {
			family: ['WV', 'Opel', 'Lada'],
			sport: ['BMW', 'Mazda', 'Porsche'],
		}
	},
	active: true,
};

const hero3 = {
	login: 'Deadpool',
	firstName: '–ë—Ä—ç–¥',
	lastName: '–ü–∏—Ç',
	favoriteWeapon: 'katanas',
	otherWEapons: [
		'Mateba Autorevolver',
		'Ingram MAC-10',
		'Desert Eagle Mark XIX',
		'M16',
		'–†–ì–î-5',
	],
	transport: {
		cars: {
			sport: ['BMW', 'Mazda', 'Porsche'],
		}
	},
	active: true,
};

const hero4 = {
	login: 'Deadpool',
	firstName: '–£—ç–π–¥',
	lastName: '–£–∏–ª—Å–æ–Ω',
	favoriteWeapon: 'katanas',
	otherWEapons: [
		'Mateba Autorevolver',
		'Ingram MAC-10',
		'Desert Eagle Mark XIX',
		'M16',
		'–†–ì–î-5',
	],
	transport: {
	},
	active: true,
	getFullName() {
		return `${this.firstName} ${this.lastName}`; // this.firstName === hero4.firstName
	},
	say() {
		console.log(`–ú–µ–Ω—è –∑–æ–≤—É—Ç ${this.getFullName()}`); // this.getFullName === hero4.getFullName
	},
};

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞
const {
	login: heroName, // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞.
	otherWEapons,
	transport: {  // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
		cars: {  // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –≤—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å
			family,
			sport,
		}
	},
	group = 'Avengers' // –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–º–µ—Ç—Ä –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–∞–∫–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞.
} = hero2;

console.log(heroName);
console.log(otherWEapons);
console.log(family, sport);
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 207 ~ group", group)


const heroes = [hero2, hero3, hero4];
heroes.forEach(item => {
	console.log(item?.transport?.cars?.family ?? 'no prop');  // –û–ø–µ—Ä–∞—Ç–æ—Ä –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤ –∫–æ–Ω—Ü–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω—É–ª–µ–æ–≥–æ —Å–ª–∏—è–Ω–∏—è(—Ä–µ–∞–≥–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ null, undefined).
});

hero4.say();


hero3.getFullName = hero4.getFullName;
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 267 ~ hero3.getFullName", hero3.getFullName());

const hero4Str = JSON.stringify(hero4);
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 286 ~ hero4Str", hero4Str);

const hero4Object = JSON.parse(hero4Str); // –ö–ª–æ–Ω	–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
console.log("üöÄ ~ file: Theory-practice-objects.js ~ line 289 ~ hero4Object", hero4Object);
